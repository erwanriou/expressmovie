<!DOCTYPE html>
	<html lang="fr">
	<head>
		<meta charset="UTF-8">
		<title>Express Movies</title>
		<link rel="stylesheet" href="../public/style.css" />
    <script src="https://unpkg.com/axios@0.15.3/dist/axios.min.js"></script>
	</head>
	<body>
		<% include ./partials/header %>
		<div class="central">
			<h1><%= title %></h1>
			<br>
			<div id='login'>
				<form>
					<legend>Veuillez saisir vos identifiants</legend>
					<label for="email">email</label>
					<input type="text" name="email" id="email">
					<label for="password">mot de passe</label>
					<input type="password" name="password" id="password">
					<button type="submit">connexion</button>
				</form>
			</div>
			<div id='profile' style='display: none'>
				<button id='disconnectBtn'>Déconnexion</button>
				<button id='displayPayLoad'>voir le payload</button>
				<div id='decodedPayLoad'></div>
				<div>
					<a id='member-only' href="#">Espace membre</a>
				</div>
			</div>
		</div>

		<footer>
			<% include ./partials/footer %>
		</footer>
		<script>
			var form = document.querySelector('form');
			form.addEventListener("submit", loginUser);

			var loginArea = document.querySelector('#login')
			var profileArea = document.querySelector('#profile')
			var disconnectBtn = document.querySelector('#disconnectBtn')
			var connectionLinkArea = document.querySelector('#connectionLink')
			var displayPayLoadBtn = document.querySelector('#displayPayLoad')
			var memberOnlyLink = document.querySelector('#member-only')

			disconnectBtn.addEventListener('click', disconnect)
			displayPayLoadBtn.addEventListener('click', displayPayLoad)
			memberOnlyLink.addEventListener('click', makeRequestWithToken)

			handleFormDisplay()

			function loginUser(event) {
                loginUserWithXHR(event);
			}

			function loginUserWithXHR(event) {
				event.preventDefault();
                console.log('loginUserWithXHR');
				// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send
				var xhr = new XMLHttpRequest();
				xhr.open("POST", '/login', true);
				//Send the proper header information along with the request
				xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				xhr.onreadystatechange = function() {//Call a function when the state changes.
					if(xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
						var token = xhr.response
						localStorage.setItem('token',token)
						switchToLoginMode()
						form.reset();
					}
				}
				var email = document.getElementById('email').value;
				var password = document.getElementById('password').value;
				var payLoad = "email=" + email + "&" + "password=" + password;
				xhr.send(payLoad);
			}

			function handleFormDisplay() {
				if (localStorage.getItem('token')) {
					switchToLoginMode()
				} else {
					switchToLogoutMode()
				}
			}

			function disconnect() {
				switchToLogoutMode()
				localStorage.removeItem('token')
			}

			function switchToLoginMode() {
				loginArea.style.display='none'
				profileArea.style.display='block'
				connectionLinkArea.innerHTML = '<a href="/login">déconnexion<a/>'
			}

			function switchToLogoutMode() {
				loginArea.style.display='block'
				profileArea.style.display='none'
				connectionLinkArea.innerHTML = '<a href="/login">connexion<a/>'
			}

			function displayPayLoad() {
				var payLoad = parseJwt()
				var decodedPayLoadDiv = document.querySelector('#decodedPayLoad')
				decodedPayLoadDiv.innerHTML = `<pre> ${JSON.stringify(payLoad)} </pre>`
			}

			function parseJwt() {
				var tokenFromStorage = localStorage.getItem('token')
				if (tokenFromStorage) {
					var base64Payload = tokenFromStorage.split('.')[1]
					return JSON.parse(window.atob(base64Payload))
				} else {
					return 'not token to parse'
				}
			}

			function makeRequestWithToken(event) {
				event.preventDefault()
				var page = this.id
				var tokenFromStorage = localStorage.getItem('token')
				var config = {}

				if (tokenFromStorage) {
					config.headers = {'Authorization': 'Bearer ' + JSON.parse(tokenFromStorage)}
				}
				axios.get(
					'http://localhost:3001/' + page,
					config
				).then(res => {
					console.log('succes')
					console.log(res);
				}).catch(err => {
					console.error('makeRequestWithToken err', err)
				})
			}
		</script>
	</body>
</html>
